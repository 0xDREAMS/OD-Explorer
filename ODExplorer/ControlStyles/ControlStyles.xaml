<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ndata="clr-namespace:ODExplorer.NavData"
                    xmlns:settings="clr-namespace:ODExplorer.AppSettings"
                    xmlns:utils="clr-namespace:ODExplorer.Utils">
    <settings:Settings x:Key="AppSettings" />
    <utils:GravityToColourConvertor x:Key="gravToColour" />

    <Style x:Key="DataGridFont"
           TargetType="{x:Type TextBlock}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsKnownToEDSM}"
                         Value="True">
                <Setter Property="Foreground"
                        Value="{DynamicResource DataGridRowKnownBodyForeGround}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsKnownToEDSM}"
                         Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource DataGridRowUnknownBodyForeGround}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridScoopable"
           TargetType="{x:Type Border}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsScoopable}"
                         Value="True">
                <Setter Property="Background"
                        Value="{DynamicResource ScoopableStar}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsScoopable}"
                         Value="False">
                <Setter Property="Background"
                        Value="{DynamicResource NonScoopableStar}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding StarClass}"
                         Value="N">
                <Setter Property="Background"
                        Value="{DynamicResource NeutronStar}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListView}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush"
                Value="{x:Null}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="0" />
    </Style>

    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBorder}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FontFamily"
                Value="Eurostile" />
        <Setter Property="ItemsPanel"
                Value="{DynamicResource MenuItemPanelTemplate}" />
    </Style>

    <ItemsPanelTemplate x:Key="MenuItemPanelTemplate">
        <StackPanel Margin="-25,0,-10,0"
                    Background="{DynamicResource PrimaryBackground}" />
    </ItemsPanelTemplate>

    <Style TargetType="{x:Type MenuItem}"
           x:Key="ContextMenuItem">
        <Setter Property="ItemsPanel"
                Value="{StaticResource MenuItemPanelTemplate}" />
        <Setter Property="FontSize"
                Value="16" />
    </Style>

    <Style x:Key="Rectangle Style"
           TargetType="{x:Type Rectangle}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Status}"
                         Value="{x:Static ndata:DiscoveryStatus.Discovered}">
                <Setter Property="Fill"
                        Value="{DynamicResource DataGridRowKnownBodyForeGround}" />
                <Setter Property="Opacity"
                        Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}"
                         Value="{x:Static ndata:DiscoveryStatus.UnDiscovered}">
                <Setter Property="Fill"
                        Value="{DynamicResource DataGridRowUnknownBodyForeGround}" />
                <Setter Property="Opacity"
                        Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}"
                         Value="{x:Static ndata:DiscoveryStatus.WorthMapping}">
                <Setter Property="Fill"
                        Value="{DynamicResource DataGridRowHighValueBodyForeGround}" />
                <Setter Property="Opacity"
                        Value="1" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Status}"
                         Value="{x:Static ndata:DiscoveryStatus.MappedByUser}">
                <Setter Property="Fill"
                        Value="{DynamicResource DataGridRowUserMappedBodyForeGround}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <CollectionViewSource x:Key="ListCsv"
                          Source="{Binding ElementName=BodyRectangle, Path=DataContext.IsPlanet}" />

    <Style x:Key="BodyRectangle"
           TargetType="{x:Type Rectangle}"
           BasedOn="{StaticResource Rectangle Style}">

        <Style.Triggers>
            <DataTrigger Binding="{Binding PlanetImage}"
                         Value="{x:Static ndata:PlanetImage.Planet}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/ODExplorer;component/Images/planet.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding PlanetImage}"
                         Value="{x:Static ndata:PlanetImage.Earth}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/ODExplorer;component/Images/earth.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding PlanetImage}"
                         Value="{x:Static ndata:PlanetImage.Water}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/ODExplorer;component/Images/water.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding PlanetImage}"
                         Value="{x:Static ndata:PlanetImage.Gas}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/ODExplorer;component/Images/jupiter.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding PlanetImage}"
                         Value="{x:Static ndata:PlanetImage.Default}">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/ODExplorer;component/Images/language.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsStar}"
                         Value="True">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/ODExplorer;component/Images/StarIcon.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <DataTrigger Binding="{Binding IsNonBody}"
                         Value="True">
                <Setter Property="OpacityMask">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/ODExplorer;component/Images/asteroid.png" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--#region ScrollBar-->
    <SolidColorBrush x:Key="StandardBorderBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="StandardBackgroundBrush"
                     Color="Black" />
    <SolidColorBrush x:Key="HoverBorderBrush"
                     Color="#DDD" />
    <SolidColorBrush x:Key="SelectedBackgroundBrush"
                     Color="Gray" />
    <SolidColorBrush x:Key="SelectedForegroundBrush"
                     Color="White" />
    <SolidColorBrush x:Key="DisabledForegroundBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="GlyphBrush"
                     Color="#444" />
    <SolidColorBrush x:Key="NormalBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="NormalBorderBrush"
                     Color="#888" />
    <SolidColorBrush x:Key="HorizontalNormalBrush"
                     Color="#FF686868" />
    <SolidColorBrush x:Key="HorizontalNormalBorderBrush"
                     Color="#888" />

    <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
                         StartPoint="0,0"
                         EndPoint="1,0.001">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="White"
                              Offset="0.0" />
                <GradientStop Color="White"
                              Offset="0.6" />
                <GradientStop Color="#DDDDDD"
                              Offset="1.2" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="StandardBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FFF"
                              Offset="0.0" />
                <GradientStop Color="#CCC"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>
    <Style x:Key="RepeatButtonTransparent"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="{TemplateBinding Background}"
                               Height="{TemplateBinding Height}"
                               Width="{TemplateBinding Width}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <SolidColorBrush x:Key="SliderThumb.Static.Background"
                     Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="SliderThumb.Static.Border"
                     Color="#FFACACAC" />
    <SolidColorBrush x:Key="SliderThumb.Static.Foreground"
                     Color="#FFE5E5E5" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Background"
                     Color="#FFDCECFC" />
    <SolidColorBrush x:Key="SliderThumb.MouseOver.Border"
                     Color="#FF7Eb4EA" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Background"
                     Color="#FFDAECFC" />
    <SolidColorBrush x:Key="SliderThumb.Pressed.Border"
                     Color="#FF569DE5" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Background"
                     Color="#FFF0F0F0" />
    <SolidColorBrush x:Key="SliderThumb.Disabled.Border"
                     Color="#FFD9D9D9" />
    <SolidColorBrush x:Key="SliderThumb.Track.Background"
                     Color="#FFE7EAEA" />
    <SolidColorBrush x:Key="SliderThumb.Track.Border"
                     Color="#FFD6D6D6" />
    <ControlTemplate x:Key="SliderThumbHorizontalDefault"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 0,0 C0,0 11,0 11,0 11,0 11,18 11,18 11,18 0,18 0,18 0,18 0,0 0,0 z"
                  Fill="{DynamicResource PrimaryControlBorder}"
                  SnapsToDevicePixels="True"
                  StrokeThickness="1"
                  Stretch="Fill"
                  Stroke="{DynamicResource PrimaryControlForeground}"
                  UseLayoutRounding="True"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{DynamicResource PrimaryControlMouseOver}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{DynamicResource PrimaryControlBorder}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{DynamicResource PrimaryControlPressed}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{DynamicResource PrimaryControlBorder}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{DynamicResource PrimaryControlBorder}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalTop"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 0,6 C0,6 5.5,0 5.5,0 5.5,0 11,6 11,6 11,6 11,18 11,18 11,18 0,18 0,18 0,18 0,6 0,6 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  SnapsToDevicePixels="True"
                  StrokeThickness="1"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumb.Static.Border}"
                  UseLayoutRounding="True"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbHorizontalBottom"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 0,12 C0,12 5.5,18 5.5,18 5.5,18 11,12 11,12 11,12 11,0 11,0 11,0 0,0 0,0 0,0 0,12 0,12 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  SnapsToDevicePixels="True"
                  StrokeThickness="1"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumb.Static.Border}"
                  UseLayoutRounding="True"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderHorizontal"
                     TargetType="{x:Type Slider}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto"
                                   MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TickBar x:Name="TopTick"
                         Fill="{TemplateBinding Foreground}"
                         Height="4"
                         Margin="0,0,0,2"
                         Placement="Top"
                         Grid.Row="0"
                         Visibility="Collapsed" />
                <TickBar x:Name="BottomTick"
                         Fill="{TemplateBinding Foreground}"
                         Height="4"
                         Margin="0,2,0,0"
                         Placement="Bottom"
                         Grid.Row="2"
                         Visibility="Collapsed" />
                <Border x:Name="TrackBackground"
                        Background="{DynamicResource PrimaryControlForeground}"
                        BorderThickness="1"
                        BorderBrush="{DynamicResource PrimaryControlBorder}"
                        Height="4.0"
                        Margin="5,0"
                        Grid.Row="1"
                        VerticalAlignment="center">
                    <Canvas Margin="-6,-1">
                        <Rectangle x:Name="PART_SelectionRange"
                                   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                   Height="4.0"
                                   Visibility="Hidden" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track"
                       Grid.Row="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Focusable="False"
                               Height="18"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbHorizontalDefault}"
                               VerticalAlignment="Center"
                               Width="11" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbHorizontalTop}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="5,2,5,0" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbHorizontalBottom}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="5,0,5,2" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="PART_SelectionRange"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Foreground"
                        TargetName="Thumb"
                        Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalDefault"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M0.5,0.5 L18.5,0.5 18.5,11.5 0.5,11.5z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalLeft"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 6,11 C6,11 0,5.5 0,5.5 0,5.5 6,0 6,0 6,0 18,0 18,0 18,0 18,11 18,11 18,11 6,11 6,11 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderThumbVerticalRight"
                     TargetType="{x:Type Thumb}">
        <Grid HorizontalAlignment="Center"
              UseLayoutRounding="True"
              VerticalAlignment="Center">
            <Path x:Name="grip"
                  Data="M 12,11 C12,11 18,5.5 18,5.5 18,5.5 12,0 12,0 12,0 0,0 0,0 0,0 0,11 0,11 0,11 12,11 12,11 z"
                  Fill="{StaticResource SliderThumb.Static.Background}"
                  Stretch="Fill"
                  Stroke="{StaticResource SliderThumb.Static.Border}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.MouseOver.Border}" />
            </Trigger>
            <Trigger Property="IsDragging"
                     Value="true">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Fill"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Background}" />
                <Setter Property="Stroke"
                        TargetName="grip"
                        Value="{StaticResource SliderThumb.Disabled.Border}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="SliderVertical"
                     TargetType="{x:Type Slider}">
        <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderThickness="{TemplateBinding BorderThickness}"
                BorderBrush="{TemplateBinding BorderBrush}"
                SnapsToDevicePixels="True">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition MinWidth="{TemplateBinding MinWidth}"
                                      Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TickBar x:Name="TopTick"
                         Grid.Column="0"
                         Fill="{TemplateBinding Foreground}"
                         Margin="0,0,2,0"
                         Placement="Left"
                         Visibility="Collapsed"
                         Width="4" />
                <TickBar x:Name="BottomTick"
                         Grid.Column="2"
                         Fill="{TemplateBinding Foreground}"
                         Margin="2,0,0,0"
                         Placement="Right"
                         Visibility="Collapsed"
                         Width="4" />
                <Border x:Name="TrackBackground"
                        Background="{StaticResource SliderThumb.Track.Background}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource SliderThumb.Track.Border}"
                        Grid.Column="1"
                        HorizontalAlignment="center"
                        Margin="0,5"
                        Width="4.0">
                    <Canvas Margin="-1,-6">
                        <Rectangle x:Name="PART_SelectionRange"
                                   Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"
                                   Visibility="Hidden"
                                   Width="4.0" />
                    </Canvas>
                </Border>
                <Track x:Name="PART_Track"
                       Grid.Column="1">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.DecreaseRepeatButton>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}"
                                      Style="{StaticResource RepeatButtonTransparent}" />
                    </Track.IncreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="Thumb"
                               Focusable="False"
                               Height="11"
                               OverridesDefaultStyle="True"
                               Template="{StaticResource SliderThumbVerticalDefault}"
                               VerticalAlignment="Top"
                               Width="18" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement"
                     Value="TopLeft">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbVerticalLeft}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="2,5,0,5" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="BottomRight">
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
                <Setter Property="Template"
                        TargetName="Thumb"
                        Value="{StaticResource SliderThumbVerticalRight}" />
                <Setter Property="Margin"
                        TargetName="TrackBackground"
                        Value="0,5,2,5" />
            </Trigger>
            <Trigger Property="TickPlacement"
                     Value="Both">
                <Setter Property="Visibility"
                        TargetName="TopTick"
                        Value="Visible" />
                <Setter Property="Visibility"
                        TargetName="BottomTick"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsSelectionRangeEnabled"
                     Value="true">
                <Setter Property="Visibility"
                        TargetName="PART_SelectionRange"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused"
                     Value="true">
                <Setter Property="Foreground"
                        TargetName="Thumb"
                        Value="Blue" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style TargetType="{x:Type Slider}">
        <Setter Property="Stylus.IsPressAndHoldEnabled"
                Value="false" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{StaticResource SliderThumb.Static.Foreground}" />
        <Setter Property="Template"
                Value="{StaticResource SliderHorizontal}" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Template"
                        Value="{StaticResource SliderVertical}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="PressedBrush"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#BBB"
                              Offset="0.0" />
                <GradientStop Color="#EEE"
                              Offset="0.1" />
                <GradientStop Color="#EEE"
                              Offset="0.9" />
                <GradientStop Color="#FFF"
                              Offset="1.0" />
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="ScrollBarLineButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
                Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Name="Border"
                            Margin="1"
                            CornerRadius="0"
                            Background="{StaticResource NormalBrush}"
                            BorderBrush="{StaticResource NormalBorderBrush}"
                            BorderThickness="1">
                        <Path HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Fill="{StaticResource GlyphBrush}"
                              Data="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{StaticResource PressedBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{StaticResource DisabledForegroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility"
                Value="Hidden" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Black" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb"
           TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="IsTabStop"
                Value="false" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            Width="Auto"
                            Margin="8,0,-2,0" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="0" />
                <RowDefinition Height="0.00001*" />
                <RowDefinition MaxHeight="0" />
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3"
                    CornerRadius="0"
                    Background="Transparent" />
            <RepeatButton Grid.Row="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineUpCommand"
                          Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track Name="PART_Track"
                   Grid.Row="1"
                   IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="1,0,1,0"
                           Background="{DynamicResource PrimaryControlForeground}"
                           BorderBrush="{DynamicResource PrimaryControlBorder}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3"
                          Style="{StaticResource ScrollBarLineButton}"
                          Height="18"
                          Command="ScrollBar.LineDownCommand"
                          Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar"
                     TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="18" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="18" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3"
                    CornerRadius="2"
                    Background="#F0F0F0" />
            <RepeatButton Grid.Column="0"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineLeftCommand"
                          Content="M 4 0 L 4 8 L 0 4 Z" />
            <Track Name="PART_Track"
                   Grid.Column="1"
                   IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}"
                           Margin="0,1,0,1"
                           Background="{StaticResource NormalBrush}"
                           BorderBrush="{StaticResource NormalBorderBrush}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                  Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3"
                          Style="{StaticResource ScrollBarLineButton}"
                          Width="18"
                          Command="ScrollBar.LineRightCommand"
                          Content="M 0 0 L 4 4 L 0 8 Z" />
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}"
           TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Height"
                        Value="18" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Width"
                        Value="18" />
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FavsScrollViewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="1" />
                        <ScrollBar Name="PART_VerticalScrollBar"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Button Style-->
    <Style BasedOn="{StaticResource {x:Type Button}}"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryControlForeground}" />
        <Setter Property="Background"
                Value="{DynamicResource PrimaryControlBackground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryControlBorder}" />
        <Setter Property="FontSize"
                Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Name="border"
                            BorderThickness="1"
                            Padding="2"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            CornerRadius="1"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Name="content" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="BorderThickness"
                                    Value="5" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource PrimaryControlBorder}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource PrimaryControlMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="BorderThickness"
                                    Value="20" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource PrimaryControlBackground}" />
                            <Setter Property="Background"
                                    Value="{DynamicResource PrimaryControlPressed}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted"
                                 Value="True">
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource PrimaryBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter TargetName="border"
                                    Property="Opacity"
                                    Value="0.7" />
                            <Setter TargetName="border"
                                    Property="BorderBrush"
                                    Value="{DynamicResource PrimaryDisabled}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Menu Bar Style-->
    <Style x:Key="MenuYellow"
           TargetType="{x:Type Menu}">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="FontSize"
                Value="16" />
        <Setter Property="Foreground"
                Value="{DynamicResource MenuBarForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border Background="{DynamicResource MenuBarBackground}"
                            BorderBrush="{DynamicResource MenuBarBackground}"
                            BorderThickness="1">
                        <StackPanel ClipToBounds="True"
                                    Orientation="Horizontal"
                                    IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MenuItem}">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="Col0"
                                                  MinWidth="17"
                                                  Width="Auto"
                                                  SharedSizeGroup="MenuItemIconColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuTextColumnGroup" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="MenuItemIGTColumnGroup" />
                                <ColumnDefinition x:Name="Col3"
                                                  Width="14" />
                            </Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
                            <ContentPresenter Grid.Column="0"
                                              Margin="4,0,6,0"
                                              x:Name="Icon"
                                              VerticalAlignment="Center"
                                              ContentSource="Icon" />

                            <!-- Glyph is a checkmark if needed for a checkable menu -->
                            <Grid Grid.Column="0"
                                  Visibility="Hidden"
                                  Margin="4,0,6,0"
                                  x:Name="GlyphPanel"
                                  VerticalAlignment="Center">
                                <Path x:Name="GlyphPanelpath"
                                      VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z"
                                      FlowDirection="LeftToRight" />
                            </Grid>

                            <!-- Content for the menu text etc -->
                            <ContentPresenter Grid.Column="1"
                                              Margin="{TemplateBinding Padding}"
                                              x:Name="HeaderHost"
                                              RecognizesAccessKey="True"
                                              ContentSource="Header" />

                            <!-- Content for the menu IGT -->
                            <ContentPresenter Grid.Column="2"
                                              Margin="8,1,8,1"
                                              x:Name="IGTHost"
                                              ContentSource="InputGestureText"
                                              VerticalAlignment="Center" />

                            <!-- Arrow drawn path which points to the next level of the menu -->
                            <Grid Grid.Column="3"
                                  Margin="4,0,6,0"
                                  x:Name="ArrowPanel"
                                  VerticalAlignment="Center">
                                <Path x:Name="ArrowPanelPath"
                                      HorizontalAlignment="Right"
                                      VerticalAlignment="Center"
                                      Fill="{TemplateBinding Foreground}"
                                      Data="M0,0 L0,8 L4,4 z" />
                            </Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
                            <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Right"
                                   x:Name="SubMenuPopup"
                                   Focusable="false"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                <Border x:Name="SubMenuBorder"
                                        BorderBrush="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Menu}}}"
                                        BorderThickness="1"
                                        Padding="2,2,2,2">
                                    <Grid x:Name="SubMenu"
                                          Grid.IsSharedSizeScope="True">
                                        <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </Grid>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
                    <ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
                        <Trigger Property="Role"
                                 Value="TopLevelHeader">
                            <Setter Property="Padding"
                                    Value="6,1,6,1" />
                            <Setter Property="Placement"
                                    Value="Bottom"
                                    TargetName="SubMenuPopup" />
                            <Setter Property="MinWidth"
                                    Value="0"
                                    TargetName="Col0" />
                            <Setter Property="Width"
                                    Value="Auto"
                                    TargetName="Col3" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Icon" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="IGTHost" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="ArrowPanel" />
                        </Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
                        <Trigger Property="Role"
                                 Value="TopLevelItem">
                            <Setter Property="Padding"
                                    Value="6,1,6,1" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="ArrowPanel" />
                        </Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
                        <Trigger Property="Role"
                                 Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter Property="Padding"
                                    Value="0,2,0,2" />
                        </Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
                        <Trigger Property="Role"
                                 Value="SubmenuItem">
                            <Setter Property="DockPanel.Dock"
                                    Value="Top" />
                            <Setter Property="Padding"
                                    Value="0,2,0,2" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="ArrowPanel" />
                        </Trigger>
                        <Trigger Property="IsSuspendingPopupAnimation"
                                 Value="true">
                            <Setter Property="PopupAnimation"
                                    Value="None"
                                    TargetName="SubMenuPopup" />
                        </Trigger>

                        <!-- If no Icon is present the we collapse the Icon Content -->
                        <Trigger Property="Icon"
                                 Value="{x:Null}">
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Icon" />
                        </Trigger>

                        <!-- The GlyphPanel contains the CheckMark -->
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Visibility"
                                    Value="Visible"
                                    TargetName="GlyphPanel" />
                            <Setter Property="Visibility"
                                    Value="Collapsed"
                                    TargetName="Icon" />
                        </Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter Property="Background"
                                    Value="{DynamicResource MenuBarMouseOverBackground}"
                                    TargetName="Border" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource MenuBarMouseOverForground}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource MenuBarMouseOverBorder}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsHighlighted"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{DynamicResource MenuBarBackground}"
                                    TargetName="Border" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource MenuBarForeground}" />
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource MenuBarBackground}"
                                    TargetName="Border" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style TargetType="{x:Type TextBlock}"
           x:Key="GravityTextBox">
        <Setter Property="Foreground"
                Value="{Binding Path=SurfaceGravity, Converter={StaticResource gravToColour}}" />
        <Setter Property="Background"
                Value="Black" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Landable}"
                         Value="True">
                <Setter Property="Visibility"
                        Value="Visible" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Landable}"
                         Value="False">
                <Setter Property="Visibility"
                        Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Seperator Style"
           TargetType="{x:Type Separator}">
        <Setter Property="Background"
                Value="{DynamicResource MenuBarBackground}" />
        <Setter Property="Margin"
                Value="0,2,0,2" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{DynamicResource MenuBarBackground}"
                            BorderThickness="0"
                            Background="{DynamicResource MenuBarSeperator}"
                            Height="1"
                            SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryControlBorder}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="15"
                                    Height="15"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="1"
                                    ClipToBounds="True">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="5"
                                                      ShadowDepth="1" />
                                </Border.Effect>

                                <Border x:Name="CheckMark"
                                        Width="7"
                                        Height="7"
                                        Background="{DynamicResource PrimaryControlForeground}" />
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked"
                                 Value="False">
                            <Setter TargetName="CheckMark"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused"
                                 Value="True">
                        </Trigger>

                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="BorderBrush"
                                    Value="{DynamicResource PrimaryDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#region ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton"
                     TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="0"
                    Background="{DynamicResource PrimaryControlBackground}"
                    BorderBrush="{DynamicResource PrimaryControlBorder}"
                    BorderThickness="1" />
            <Border Grid.Column="0"
                    CornerRadius="0"
                    Margin="1"
                    Background="{DynamicResource PrimaryControlBackground}"
                    BorderBrush="{DynamicResource PrimaryControlBorder}"
                    BorderThickness="0,0,1,0" />
            <Path x:Name="Arrow"
                  Grid.Column="1"
                  Fill="{DynamicResource PrimaryControlForeground}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox"
                     TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost"
                Focusable="False"
                Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}"
           TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="FontFamily"
                Value="Eurostile" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryControlForeground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryControlBorder}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton Name="ToggleButton"
                                      Template="{StaticResource ComboBoxToggleButton}"
                                      Grid.Column="2"
                                      Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite"
                                          IsHitTestVisible="False"
                                          Content="{TemplateBinding SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          Margin="3,3,23,3"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                 Style="{x:Null}"
                                 Template="{StaticResource ComboBoxTextBox}"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Margin="3,3,23,3"
                                 Focusable="True"
                                 Background="#FF3F3F3F"
                                 Foreground="Green"
                                 Visibility="Hidden"
                                 IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup Name="Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown"
                                  SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding ActualWidth}"
                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder"
                                        Background="{DynamicResource PrimaryControlBackground}"
                                        BorderThickness="1"
                                        BorderBrush="{DynamicResource PrimaryControlBorder}" />
                                <ScrollViewer Margin="4,6,4,6"
                                              SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True"
                                                KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter TargetName="DropDownBorder"
                                    Property="MinHeight"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryDisabled}" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger SourceName="Popup"
                                 Property="Popup.AllowsTransparency"
                                 Value="true">
                            <Setter TargetName="DropDownBorder"
                                    Property="CornerRadius"
                                    Value="0" />
                            <Setter TargetName="DropDownBorder"
                                    Property="Margin"
                                    Value="0,2,0,0" />
                        </Trigger>
                        <Trigger Property="IsEditable"
                                 Value="true">
                            <Setter Property="IsTabStop"
                                    Value="false" />
                            <Setter TargetName="PART_EditableTextBox"
                                    Property="Visibility"
                                    Value="Visible" />
                            <Setter TargetName="ContentSite"
                                    Property="Visibility"
                                    Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <!-- SimpleStyles: ComboBoxItem -->
    <Style x:Key="{x:Type ComboBoxItem}"
           TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryControlForeground}" />
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted"
                                 Value="true">
                            <Setter TargetName="Border"
                                    Property="Background"
                                    Value="{DynamicResource PrimaryControlMouseOver}" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource PrimaryDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <Style TargetType="{x:Type ToolTip}">
        <Setter Property="Background"
                Value="{DynamicResource PrimaryBackground}" />
        <Setter Property="Foreground"
                Value="{DynamicResource PrimaryForeground}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource PrimaryBorder}" />
        <Setter Property="FontFamily"
                Value="EuroStile" />
        <Setter Property="FontSize"
                Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}">
                    <Border x:Name="Border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <Border.LayoutTransform>
                            <ScaleTransform ScaleX="{Binding Source={StaticResource AppSettings}, Path=SettingsInstance.Value.UiScale}"
                                            ScaleY="{Binding Source={StaticResource AppSettings}, Path=SettingsInstance.Value.UiScale}" />
                        </Border.LayoutTransform>
                        <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>